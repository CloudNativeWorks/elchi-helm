{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "replicaCount": {
      "type": "integer",
      "minimum": 1,
      "default": 1,
      "description": "Number of replicas"
    },
    "image": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "default": "jhonbrownn/elchi-discovery",
          "description": "Container image repository"
        },
        "pullPolicy": {
          "type": "string",
          "enum": ["Always", "IfNotPresent", "Never"],
          "default": "Always",
          "description": "Image pull policy"
        },
        "tag": {
          "type": "string",
          "default": "latest",
          "description": "Container image tag"
        }
      },
      "required": ["repository", "pullPolicy", "tag"]
    },
    "config": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "Elchi authentication token",
          "minLength": 1
        },
        "apiEndpoint": {
          "type": "string",
          "format": "uri",
          "description": "API endpoint to send discovery results"
        },
        "insecureSkipVerify": {
          "type": "boolean",
          "default": false,
          "description": "Skip TLS certificate verification"
        },
        "log": {
          "type": "object",
          "properties": {
            "level": {
              "type": "string",
              "enum": ["debug", "info", "warn", "error"],
              "default": "info",
              "description": "Log level"
            },
            "format": {
              "type": "string",
              "enum": ["json", "text"],
              "default": "json",
              "description": "Log format"
            },
            "output": {
              "type": "string",
              "default": "stdout",
              "description": "Log output destination"
            }
          }
        }
      },
      "required": ["token", "apiEndpoint"]
    },
    "discoveryInterval": {
      "type": "integer",
      "minimum": 10,
      "maximum": 3600,
      "default": 30,
      "description": "Discovery interval in seconds"
    },
    "clusterName": {
      "type": "string",
      "minLength": 1,
      "description": "Cluster name (REQUIRED)"
    },
    "resources": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string",
              "pattern": "^[0-9]+[mn]?$",
              "default": "200m"
            },
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+[GMK]i$",
              "default": "128Mi"
            }
          }
        },
        "requests": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string",
              "pattern": "^[0-9]+[mn]?$",
              "default": "100m"
            },
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+[GMK]i$",
              "default": "64Mi"
            }
          }
        }
      }
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "default": true,
          "description": "Specifies whether a service account should be created"
        },
        "annotations": {
          "type": "object",
          "description": "Annotations to add to the service account"
        },
        "name": {
          "type": "string",
          "description": "The name of the service account to use"
        }
      }
    },
    "rbac": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "default": true,
          "description": "Specifies whether RBAC resources should be created"
        }
      }
    },
    "env": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Environment variable name"
          },
          "value": {
            "type": "string",
            "description": "Environment variable value"
          }
        },
        "required": ["name"]
      },
      "default": [],
      "description": "Additional environment variables"
    },
    "envFrom": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "configMapRef": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "secretRef": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "default": [],
      "description": "Additional environment variables from ConfigMaps or Secrets"
    },
    "timezone": {
      "type": "string",
      "default": "UTC",
      "description": "Timezone for the container"
    },
    "timezonePath": {
      "type": "string",
      "default": "/etc/localtime",
      "description": "Host path to timezone file"
    }
  },
  "required": ["config", "clusterName"]
}